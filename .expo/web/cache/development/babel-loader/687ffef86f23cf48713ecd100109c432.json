{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/hein/repos/react/react-native-shared-element/src/SharedElementTransition.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { RNSharedElementTransitionView } from \"./RNSharedElementTransitionView\";\nvar NativeAnimationType = new Map([['move', 0], ['fade', 1], ['fade-in', 2], ['fade-out', 3]]);\nvar NativeResizeType = new Map([['auto', 0], ['stretch', 1], ['clip', 2], ['none', 3]]);\nvar NativeAlignType = new Map([['auto', 0], ['left-top', 1], ['left-center', 2], ['left-bottom', 3], ['right-top', 4], ['right-center', 5], ['right-bottom', 6], ['center-top', 7], ['center-center', 8], ['center-bottom', 9]]);\nvar debugColors = {\n  startNode: '#82B2E8',\n  endNode: '#5EFF9B',\n  pink: '#DC9CFF',\n  startAncestor: '#E88F82',\n  endAncestor: '#FFDC8F'\n};\nvar debugStyles = StyleSheet.create({\n  overlay: _objectSpread({}, StyleSheet.absoluteFillObject, {\n    backgroundColor: 'black',\n    opacity: 0.3\n  }),\n  text: {\n    marginLeft: 3,\n    marginTop: 3,\n    fontSize: 10\n  },\n  box: {\n    position: 'absolute',\n    borderWidth: 1,\n    borderStyle: 'dashed'\n  }\n});\nexport var RNAnimatedSharedElementTransitionView = RNSharedElementTransitionView ? Animated.createAnimatedComponent(RNSharedElementTransitionView) : undefined;\nexport var SharedElementTransition = function (_React$Component) {\n  _inherits(SharedElementTransition, _React$Component);\n\n  _createClass(SharedElementTransition, null, [{\n    key: \"prepareNode\",\n    value: function prepareNode(node) {\n      var nodeStyle = {};\n\n      if (Platform.OS === 'android' && node && node.parentInstance) {\n        var child = React.Children.only(node.parentInstance.props.children);\n        var props = child ? child.props : {};\n        nodeStyle = StyleSheet.flatten([props.style]) || {};\n        delete nodeStyle.transform;\n        delete nodeStyle.opacity;\n        nodeStyle.resizeMode = nodeStyle.resizeMode || props.resizeMode;\n        if (nodeStyle.backgroundColor) nodeStyle.backgroundColor = processColor(nodeStyle.backgroundColor);\n        if (nodeStyle.borderColor) nodeStyle.borderColor = processColor(nodeStyle.borderColor);\n        if (nodeStyle.color) nodeStyle.color = processColor(nodeStyle.color);\n      }\n\n      return node ? {\n        nodeHandle: node.nodeHandle,\n        isParent: node.isParent,\n        nodeStyle: nodeStyle\n      } : undefined;\n    }\n  }]);\n\n  function SharedElementTransition(props) {\n    var _this;\n\n    _classCallCheck(this, SharedElementTransition);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SharedElementTransition).call(this, props));\n    _this.state = {};\n\n    _this.onMeasureNode = function (event) {\n      var nativeEvent = event.nativeEvent;\n      var onMeasure = _this.props.onMeasure;\n\n      _this.setState(_defineProperty({}, \"\" + nativeEvent.node, nativeEvent));\n\n      if (onMeasure) {\n        onMeasure(event);\n      }\n    };\n\n    if (!props.SharedElementComponent && !SharedElementTransition.isNotAvailableWarningShown) {\n      SharedElementTransition.isNotAvailableWarningShown = true;\n\n      if (Platform.OS === 'android' || Platform.OS === 'ios') {\n        console.warn('RNSharedElementTransition is not available, did you forget to link `react-native-shared-element` into your project?');\n      } else {\n        console.warn('RNSharedElementTransition is not available on this platform');\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(SharedElementTransition, [{\n    key: \"renderDebugOverlay\",\n    value: function renderDebugOverlay() {\n      if (!this.props.debug) {\n        return;\n      }\n\n      return React.createElement(View, {\n        style: debugStyles.overlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        }\n      });\n    }\n  }, {\n    key: \"renderDebugLayer\",\n    value: function renderDebugLayer(name) {\n      var event = this.state[name];\n      if (!event || !this.props.debug) return;\n      var layout = event.layout,\n          style = event.style;\n      var isContentDifferent = layout.x !== layout.contentX || layout.y !== layout.contentY || layout.width !== layout.contentWidth || layout.height !== layout.contentHeight;\n      var isFullScreen = layout.visibleX === 0 && layout.visibleY === 0 && layout.visibleWidth === Dimensions.get('window').width && layout.visibleHeight === Dimensions.get('window').height;\n      var color = debugColors[name];\n      return React.createElement(View, {\n        style: StyleSheet.absoluteFill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        }\n      }, isContentDifferent ? React.createElement(View, {\n        style: [debugStyles.box, {\n          left: layout.contentX,\n          top: layout.contentY,\n          width: layout.contentWidth,\n          height: layout.contentHeight,\n          borderColor: color,\n          opacity: 0.5\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        }\n      }, React.createElement(Text, {\n        style: [debugStyles.text, {\n          color: color\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        }\n      }, \"Content\")) : undefined, React.createElement(View, {\n        style: [debugStyles.box, {\n          left: layout.x,\n          top: layout.y,\n          width: layout.width,\n          height: layout.height,\n          borderColor: color,\n          borderRadius: style.borderRadius || 0\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        }\n      }, React.createElement(Text, {\n        style: [debugStyles.text, {\n          color: color,\n          marginTop: Math.max((style.borderRadius || 0) - 7, 3)\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        }\n      }, name)), React.createElement(View, {\n        style: {\n          position: 'absolute',\n          overflow: 'hidden',\n          left: layout.visibleX,\n          top: layout.visibleY,\n          width: layout.visibleWidth,\n          height: layout.visibleHeight\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        }\n      }, React.createElement(View, {\n        style: [{\n          position: 'absolute',\n          left: layout.x - layout.visibleX,\n          top: layout.y - layout.visibleY,\n          width: layout.width,\n          height: layout.height,\n          borderRadius: style.borderRadius || 0,\n          backgroundColor: isFullScreen ? 'transparent' : color + '80'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        }\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          SharedElementComponent = _this$props.SharedElementComponent,\n          start = _this$props.start,\n          end = _this$props.end,\n          position = _this$props.position,\n          animation = _this$props.animation,\n          resize = _this$props.resize,\n          align = _this$props.align,\n          onMeasure = _this$props.onMeasure,\n          debug = _this$props.debug,\n          otherProps = _objectWithoutProperties(_this$props, [\"SharedElementComponent\", \"start\", \"end\", \"position\", \"animation\", \"resize\", \"align\", \"onMeasure\", \"debug\"]);\n\n      if (!SharedElementComponent) {\n        return null;\n      }\n\n      return React.createElement(View, {\n        style: StyleSheet.absoluteFill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        }\n      }, React.createElement(SharedElementComponent, _extends({\n        startNode: {\n          node: SharedElementTransition.prepareNode(start.node),\n          ancestor: SharedElementTransition.prepareNode(start.ancestor)\n        },\n        endNode: {\n          node: SharedElementTransition.prepareNode(end.node),\n          ancestor: SharedElementTransition.prepareNode(end.ancestor)\n        },\n        nodePosition: position,\n        animation: NativeAnimationType.get(animation),\n        resize: NativeResizeType.get(resize),\n        align: NativeAlignType.get(align),\n        onMeasureNode: debug ? this.onMeasureNode : onMeasure\n      }, otherProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        }\n      })), this.renderDebugLayer('startNode'), this.renderDebugLayer('endNode'));\n    }\n  }]);\n\n  return SharedElementTransition;\n}(React.Component);\nSharedElementTransition.defaultProps = {\n  start: {},\n  end: {},\n  SharedElementComponent: RNAnimatedSharedElementTransitionView,\n  animation: 'move',\n  resize: 'auto',\n  align: 'auto'\n};\nSharedElementTransition.isNotAvailableWarningShown = false;","map":{"version":3,"sources":["SharedElementTransition.tsx"],"names":["NativeAnimationType","NativeResizeType","NativeAlignType","debugColors","startNode","endNode","pink","startAncestor","endAncestor","debugStyles","StyleSheet","overlay","backgroundColor","opacity","text","marginLeft","marginTop","fontSize","box","position","borderWidth","borderStyle","RNAnimatedSharedElementTransitionView","RNSharedElementTransitionView","Animated","SharedElementTransition","React","nodeStyle","Platform","node","child","props","processColor","nodeHandle","isParent","defaultProps","start","end","SharedElementComponent","animation","resize","align","console","isNotAvailableWarningShown","nativeEvent","event","onMeasure","layout","style","isContentDifferent","isFullScreen","Dimensions","color","left","top","width","height","borderColor","borderRadius","Math","overflow","debug","otherProps","ancestor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Text,\n  Animated,\n  Dimensions,\n  StyleSheet,\n  processColor,\n  Platform,\n} from 'react-native';\nimport {\n  SharedElementNode,\n  SharedElementAnimation,\n  SharedElementResize,\n  SharedElementAlign,\n  SharedElementNodeType,\n  SharedElementContentType,\n} from './types';\nimport { RNSharedElementTransitionView } from './RNSharedElementTransitionView';\n\nexport type SharedElementMeasureData = {\n  node: SharedElementNodeType;\n  layout: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    visibleX: number;\n    visibleY: number;\n    visibleWidth: number;\n    visibleHeight: number;\n    contentX: number;\n    contentY: number;\n    contentWidth: number;\n    contentHeight: number;\n  };\n  contentType: SharedElementContentType;\n  style: {\n    borderRadius: number;\n  };\n};\n\nexport type SharedElementOnMeasureEvent = {\n  nativeEvent: SharedElementMeasureData;\n};\n\nexport type SharedElementTransitionProps = {\n  start: {\n    node: SharedElementNode | null;\n    ancestor: SharedElementNode | null;\n  };\n  end: {\n    node: SharedElementNode | null;\n    ancestor: SharedElementNode | null;\n  };\n  position: number | any | void;\n  animation: SharedElementAnimation;\n  resize?: SharedElementResize;\n  align?: SharedElementAlign;\n  debug?: boolean;\n  style?: any;\n  onMeasure?: (event: SharedElementOnMeasureEvent) => void;\n  SharedElementComponent?: any;\n};\n\nconst NativeAnimationType = new Map<SharedElementAnimation, number>([\n  ['move', 0],\n  ['fade', 1],\n  ['fade-in', 2],\n  ['fade-out', 3],\n]);\n\nconst NativeResizeType = new Map<SharedElementResize, number>([\n  ['auto', 0],\n  ['stretch', 1],\n  ['clip', 2],\n  ['none', 3],\n]);\n\nconst NativeAlignType = new Map<SharedElementAlign, number>([\n  ['auto', 0],\n  ['left-top', 1],\n  ['left-center', 2],\n  ['left-bottom', 3],\n  ['right-top', 4],\n  ['right-center', 5],\n  ['right-bottom', 6],\n  ['center-top', 7],\n  ['center-center', 8],\n  ['center-bottom', 9],\n]);\n\nconst debugColors = {\n  startNode: '#82B2E8',\n  endNode: '#5EFF9B',\n  pink: '#DC9CFF',\n  startAncestor: '#E88F82',\n  endAncestor: '#FFDC8F',\n};\n\nconst debugStyles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'black',\n    opacity: 0.3,\n  },\n  text: {\n    marginLeft: 3,\n    marginTop: 3,\n    fontSize: 10,\n  },\n  box: {\n    position: 'absolute',\n    borderWidth: 1,\n    borderStyle: 'dashed',\n  },\n});\n\ntype StateType = {\n  startNode?: SharedElementMeasureData;\n  endNode?: SharedElementMeasureData;\n  startAncestor?: SharedElementMeasureData;\n  endAncestor?: SharedElementMeasureData;\n};\n\nexport const RNAnimatedSharedElementTransitionView = RNSharedElementTransitionView\n  ? Animated.createAnimatedComponent(RNSharedElementTransitionView)\n  : undefined;\n\nexport class SharedElementTransition extends React.Component<\n  SharedElementTransitionProps,\n  StateType\n> {\n  static prepareNode(node: SharedElementNode | null): any {\n    let nodeStyle: any = {};\n    if (Platform.OS === 'android' && node && node.parentInstance) {\n      const child = React.Children.only(node.parentInstance.props.children);\n      const props = child ? child.props : {};\n      nodeStyle = StyleSheet.flatten([props.style]) || {};\n      delete nodeStyle.transform;\n      delete nodeStyle.opacity;\n      nodeStyle.resizeMode = nodeStyle.resizeMode || props.resizeMode;\n      if (nodeStyle.backgroundColor)\n        nodeStyle.backgroundColor = processColor(nodeStyle.backgroundColor);\n      if (nodeStyle.borderColor)\n        nodeStyle.borderColor = processColor(nodeStyle.borderColor);\n      if (nodeStyle.color) nodeStyle.color = processColor(nodeStyle.color);\n    }\n    return node\n      ? {\n          nodeHandle: node.nodeHandle,\n          isParent: node.isParent,\n          nodeStyle,\n        }\n      : undefined;\n  }\n\n  static defaultProps = {\n    start: {},\n    end: {},\n    SharedElementComponent: RNAnimatedSharedElementTransitionView,\n    animation: 'move',\n    resize: 'auto',\n    align: 'auto',\n  };\n\n  constructor(props: SharedElementTransitionProps) {\n    super(props);\n    if (\n      !props.SharedElementComponent &&\n      !SharedElementTransition.isNotAvailableWarningShown\n    ) {\n      SharedElementTransition.isNotAvailableWarningShown = true;\n      if (Platform.OS === 'android' || Platform.OS === 'ios') {\n        console.warn(\n          'RNSharedElementTransition is not available, did you forget to link `react-native-shared-element` into your project?'\n        );\n      } else {\n        console.warn(\n          'RNSharedElementTransition is not available on this platform'\n        );\n      }\n    }\n  }\n\n  state: StateType = {};\n\n  private static isNotAvailableWarningShown = false;\n\n  onMeasureNode = (event: SharedElementOnMeasureEvent) => {\n    const { nativeEvent } = event;\n    const { onMeasure } = this.props;\n    this.setState({\n      [`${nativeEvent.node}`]: nativeEvent,\n    });\n    // console.log(\"onMeasure: \", nativeEvent);\n    if (onMeasure) {\n      onMeasure(event);\n    }\n  };\n\n  renderDebugOverlay() {\n    if (!this.props.debug) {\n      return;\n    }\n    return <View style={debugStyles.overlay} />;\n  }\n\n  renderDebugLayer(name: SharedElementNodeType) {\n    const event = this.state[name];\n    if (!event || !this.props.debug) return;\n    const { layout, style } = event;\n    const isContentDifferent =\n      layout.x !== layout.contentX ||\n      layout.y !== layout.contentY ||\n      layout.width !== layout.contentWidth ||\n      layout.height !== layout.contentHeight;\n    const isFullScreen =\n      layout.visibleX === 0 &&\n      layout.visibleY === 0 &&\n      layout.visibleWidth === Dimensions.get('window').width &&\n      layout.visibleHeight === Dimensions.get('window').height;\n\n    const color = debugColors[name];\n    return (\n      <View style={StyleSheet.absoluteFill}>\n        {isContentDifferent ? (\n          <View\n            style={[\n              debugStyles.box,\n              {\n                left: layout.contentX,\n                top: layout.contentY,\n                width: layout.contentWidth,\n                height: layout.contentHeight,\n                borderColor: color,\n                opacity: 0.5,\n              },\n            ]}\n          >\n            <Text style={[debugStyles.text, { color }]}>Content</Text>\n          </View>\n        ) : (\n          undefined\n        )}\n        <View\n          style={[\n            debugStyles.box,\n            {\n              left: layout.x,\n              top: layout.y,\n              width: layout.width,\n              height: layout.height,\n              borderColor: color,\n              borderRadius: style.borderRadius || 0,\n            },\n          ]}\n        >\n          <Text\n            style={[\n              debugStyles.text,\n              { color, marginTop: Math.max((style.borderRadius || 0) - 7, 3) },\n            ]}\n          >\n            {name}\n          </Text>\n        </View>\n        <View\n          style={{\n            position: 'absolute',\n            overflow: 'hidden',\n            left: layout.visibleX,\n            top: layout.visibleY,\n            width: layout.visibleWidth,\n            height: layout.visibleHeight,\n          }}\n        >\n          <View\n            style={[\n              {\n                position: 'absolute',\n                left: layout.x - layout.visibleX,\n                top: layout.y - layout.visibleY,\n                width: layout.width,\n                height: layout.height,\n                borderRadius: style.borderRadius || 0,\n                backgroundColor: isFullScreen ? 'transparent' : color + '80',\n              },\n            ]}\n          />\n        </View>\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      SharedElementComponent,\n      start,\n      end,\n      position,\n      animation,\n      resize,\n      align,\n      onMeasure,\n      debug,\n      // style,\n      ...otherProps\n    } = this.props;\n    if (!SharedElementComponent) {\n      return null;\n    }\n    return (\n      <View style={StyleSheet.absoluteFill}>\n        <SharedElementComponent\n          startNode={{\n            node: SharedElementTransition.prepareNode(start.node),\n            ancestor: SharedElementTransition.prepareNode(start.ancestor),\n          }}\n          endNode={{\n            node: SharedElementTransition.prepareNode(end.node),\n            ancestor: SharedElementTransition.prepareNode(end.ancestor),\n          }}\n          nodePosition={position}\n          animation={NativeAnimationType.get(animation)}\n          // @ts-ignore\n          resize={NativeResizeType.get(resize)}\n          // @ts-ignore\n          align={NativeAlignType.get(align)}\n          onMeasureNode={debug ? this.onMeasureNode : onMeasure}\n          // style={debug && style ? [debugStyles.content, style] : style}\n          {...otherProps}\n        />\n        {/*this.renderDebugOverlay()*/}\n        {this.renderDebugLayer('startNode')}\n        {this.renderDebugLayer('endNode')}\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}