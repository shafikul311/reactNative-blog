{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import React from 'react';\r\n// import 'react-native-gesture-handler';\r\n// import { NavigationContainer } from '@react-navigation/native';\r\n// import { Ionicons } from '@expo/vector-icons';\r\n// import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n\r\n// // Package\r\n// import { createSharedElementStackNavigator } from 'react-navigation-shared-element';\r\n\r\n// // Screens\r\n// import MainScreen from './pages/MainScreen'\r\n// import DetailScreen from './pages/DetailScreen'\r\n\r\n// //redux\r\n// import { Provider } from 'react-redux';\r\n// import { store } from './redux/store';\r\n// import { SettingsScreen } from './components/Testing/Testing';\r\n\r\n// const Stack = createSharedElementStackNavigator();\r\n// const Tab = createBottomTabNavigator();\r\n\r\n// const App = () => {\r\n//   return (\r\n//     <Provider store={store}>\r\n//       <NavigationContainer>\r\n\r\n//         <Tab.Navigator\r\n//           screenOptions={({ route }) => ({\r\n//             tabBarIcon: ({ focused, color, size }) => {\r\n//               let iconName;\r\n\r\n//               if (route.name === 'MainScreen') {\r\n//                 iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\r\n//               } else if (route.name === 'Settings') {\r\n//                 iconName = focused ? 'ios-list-box' : 'ios-list';\r\n//               }\r\n\r\n//               // You can return any component that you like here!\r\n//               return <Ionicons name={iconName} size={size} color={color} />;\r\n//             },\r\n//           })}\r\n//           tabBarOptions={{\r\n//             activeTintColor: 'tomato',\r\n//             inactiveTintColor: 'gray',\r\n//           }}\r\n//         >\r\n//           <Tab.Screen name=\"MainScreen\" component={MainScreen} />\r\n//           <Tab.Screen name=\"Settings\" component={SettingsScreen} />\r\n//         </Tab.Navigator>\r\n//         //\r\n//         {/* <Stack.Navigator\r\n//           initialRouteName=\"List\"\r\n//           screenOptions={{\r\n//             headerShown: false\r\n//           }}>\r\n//           <Stack.Screen name=\"MainScreen\" component={MainScreen} />\r\n//           <Stack.Screen\r\n//             name=\"DetailScreen\"\r\n//             component={DetailScreen}\r\n//             options={() => ({\r\n//               headerBackTitleVisible: false,\r\n//               cardStyleInterpolator: ({ current: { progress } }) => {\r\n//                 return {\r\n//                   cardStyle: {\r\n//                     opacity: progress,\r\n//                   },\r\n//                 };\r\n//               },\r\n//             })}\r\n//           />\r\n//         </Stack.Navigator> */}\r\n//       </NavigationContainer>\r\n//     </Provider>\r\n//   );\r\n// };\r\n\r\n// export default App;"]},"metadata":{},"sourceType":"script"}