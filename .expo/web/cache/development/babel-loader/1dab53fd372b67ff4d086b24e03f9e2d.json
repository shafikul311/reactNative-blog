{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { Rect } from \"./Rect\";\nimport { parseColor, interpolateColor } from \"./Color\";\n\nfunction interpolate(val1, val2, position) {\n  return val1 + (val2 - val1) * position;\n}\n\nexport var RNSharedElementStyle = function () {\n  function RNSharedElementStyle(layout, style) {\n    _classCallCheck(this, RNSharedElementStyle);\n\n    this.layout = layout;\n    this.style = style;\n    this.opacity = Number(style.opacity);\n    this.backgroundColor = parseColor(style.backgroundColor);\n  }\n\n  _createClass(RNSharedElementStyle, null, [{\n    key: \"getInterpolatedLayout\",\n    value: function getInterpolatedLayout(layout1, layout2, position) {\n      return new Rect({\n        x: interpolate(layout1.x, layout2.x, position),\n        y: interpolate(layout1.y, layout2.y, position),\n        width: interpolate(layout1.width, layout2.width, position),\n        height: interpolate(layout1.height, layout2.height, position)\n      });\n    }\n  }, {\n    key: \"getInterpolatedStyle\",\n    value: function getInterpolatedStyle(style1, style2, position) {\n      var layout = RNSharedElementStyle.getInterpolatedLayout(style1.layout, style2.layout, position);\n      return new RNSharedElementStyle(layout, _objectSpread({}, style1, {\n        opacity: interpolate(style1.opacity, style2.opacity, position),\n        backgroundColor: interpolateColor(style1.backgroundColor, style2.backgroundColor, position)\n      }));\n    }\n  }]);\n\n  return RNSharedElementStyle;\n}();","map":{"version":3,"sources":["RNSharedElementStyle.ts"],"names":["val1","val2","RNSharedElementStyle","Number","style","parseColor","x","interpolate","layout1","layout2","y","width","height","layout","style1","style2","opacity","backgroundColor","interpolateColor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,SAAA,IAAA;AAEA,SAAA,UAAA,EAAA,gBAAA;;AAaA,SAAA,WAAA,CAAA,IAAA,EAAA,IAAA,EAAA,QAAA,EAAmE;AACjE,SAAOA,IAAI,GAAG,CAACC,IAAI,GAAL,IAAA,IAAd,QAAA;AAGF;;AAAA,OAAA,IAAaC,oBAAb,GAAA,YAAA;AAME,WAAA,oBAAA,CAAA,MAAA,EAAA,KAAA,EAAsD;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,oBAAA,CAAA;;AACpD,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,KAAA,GAAA,KAAA;AACA,SAAA,OAAA,GAAeC,MAAM,CAACC,KAAK,CAA3B,OAAqB,CAArB;AACA,SAAA,eAAA,GAAuBC,UAAU,CAACD,KAAK,CAAvC,eAAiC,CAAjC;AAVJ;;AAAA,EAAA,YAAA,CAAA,oBAAA,EAAA,IAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,uBAAA;AAAA,IAAA,KAAA,EAAA,SAAA,qBAAA,CAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAiBI;AACA,aAAO,IAAA,IAAA,CAAS;AACdE,QAAAA,CAAC,EAAEC,WAAW,CAACC,OAAO,CAAR,CAAA,EAAYC,OAAO,CAAnB,CAAA,EADA,QACA,CADA;AAEdC,QAAAA,CAAC,EAAEH,WAAW,CAACC,OAAO,CAAR,CAAA,EAAYC,OAAO,CAAnB,CAAA,EAFA,QAEA,CAFA;AAGdE,QAAAA,KAAK,EAAEJ,WAAW,CAACC,OAAO,CAAR,KAAA,EAAgBC,OAAO,CAAvB,KAAA,EAHJ,QAGI,CAHJ;AAIdG,QAAAA,MAAM,EAAEL,WAAW,CAACC,OAAO,CAAR,MAAA,EAAiBC,OAAO,CAAxB,MAAA,EAJrB,QAIqB;AAJL,OAAT,CAAP;AAlBJ;AAAA,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,sBAAA;AAAA,IAAA,KAAA,EAAA,SAAA,oBAAA,CAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EA8BI;AACA,UAAMI,MAAM,GAAGX,oBAAoB,CAApBA,qBAAAA,CACbY,MAAM,CADOZ,MAAAA,EAEba,MAAM,CAFOb,MAAAA,EAAf,QAAeA,CAAf;AAKA,aAAO,IAAA,oBAAA,CAAA,MAAA,EAAA,aAAA,CAAA,EAAA,EAAA,MAAA,EAAA;AAELc,QAAAA,OAAO,EAAET,WAAW,CAACO,MAAM,CAAP,OAAA,EAAiBC,MAAM,CAAvB,OAAA,EAFf,QAEe,CAFf;AAGLE,QAAAA,eAAe,EAAEC,gBAAgB,CAC/BJ,MAAM,CADyB,eAAA,EAE/BC,MAAM,CAFyB,eAAA,EAHnC,QAGmC;AAH5B,OAAA,CAAA,CAAP;AApCJ;AAAA,GAAA,CAAA,CAAA;;AAAA,SAAA,oBAAA;AAAA,CAAA,EAAA","sourcesContent":["import { Rect } from './Rect';\nimport { CSSStyleDeclaration } from './types';\nimport { Color, parseColor, interpolateColor } from './Color';\n\n/*int backgroundColor = Color.TRANSPARENT;\n    float opacity = 1;\n    float borderTopLeftRadius = 0;\n    float borderTopRightRadius = 0;\n    float borderBottomLeftRadius = 0;\n    float borderBottomRightRadius = 0;\n    float borderWidth = 0;\n    int borderColor = Color.TRANSPARENT;\n    String borderStyle = \"solid\";\n    float elevation = 0;*/\n\nfunction interpolate(val1: number, val2: number, position: number) {\n  return val1 + (val2 - val1) * position;\n}\n\nexport class RNSharedElementStyle {\n  public readonly layout: Rect;\n  public readonly style: CSSStyleDeclaration;\n  public readonly opacity: number;\n  public readonly backgroundColor: Color;\n\n  constructor(layout: Rect, style: CSSStyleDeclaration) {\n    this.layout = layout;\n    this.style = style;\n    this.opacity = Number(style.opacity);\n    this.backgroundColor = parseColor(style.backgroundColor);\n  }\n\n  public static getInterpolatedLayout(\n    layout1: Rect,\n    layout2: Rect,\n    position: number\n  ) {\n    return new Rect({\n      x: interpolate(layout1.x, layout2.x, position),\n      y: interpolate(layout1.y, layout2.y, position),\n      width: interpolate(layout1.width, layout2.width, position),\n      height: interpolate(layout1.height, layout2.height, position),\n    });\n  }\n\n  public static getInterpolatedStyle(\n    style1: RNSharedElementStyle,\n    style2: RNSharedElementStyle,\n    position: number\n  ) {\n    const layout = RNSharedElementStyle.getInterpolatedLayout(\n      style1.layout,\n      style2.layout,\n      position\n    );\n    return new RNSharedElementStyle(layout, {\n      ...style1,\n      opacity: interpolate(style1.opacity, style2.opacity, position),\n      backgroundColor: interpolateColor(\n        style1.backgroundColor,\n        style2.backgroundColor,\n        position\n      ),\n    });\n  }\n\n  /* \n\n    private RNSharedElementStyle getInterpolatedStyle(\n        RNSharedElementStyle style1,\n        RNSharedElementContent content1,\n        RNSharedElementStyle style2,\n        RNSharedElementContent content2,\n        float position\n    ) {\n        RNSharedElementStyle result = new RNSharedElementStyle();\n        result.scaleType = RNSharedElementStyle.getInterpolatingScaleType(style1, style2, position);\n        result.opacity = style1.opacity + ((style2.opacity - style1.opacity) * position);\n        result.backgroundColor = getInterpolatedColor(style1.backgroundColor, style2.backgroundColor, position);\n        result.borderTopLeftRadius = style1.borderTopLeftRadius + ((style2.borderTopLeftRadius - style1.borderTopLeftRadius) * position);\n        result.borderTopRightRadius = style1.borderTopRightRadius + ((style2.borderTopRightRadius - style1.borderTopRightRadius) * position);\n        result.borderBottomLeftRadius = style1.borderBottomLeftRadius + ((style2.borderBottomLeftRadius - style1.borderBottomLeftRadius) * position);\n        result.borderBottomRightRadius = style1.borderBottomRightRadius + ((style2.borderBottomRightRadius - style1.borderBottomRightRadius) * position);\n        result.borderWidth = style1.borderWidth + ((style2.borderWidth - style1.borderWidth) * position);\n        result.borderColor = getInterpolatedColor(style1.borderColor, style2.borderColor, position);\n        result.borderStyle = style1.borderStyle;\n        result.elevation = style1.elevation + ((style2.elevation - style1.elevation) * position);\n        return result;\n    }*/\n}\n"]},"metadata":{},"sourceType":"module"}