{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { RNSharedElementContent } from \"./RNSharedElementContent.web\";\nimport { RNSharedElementNodeManager } from \"./RNSharedElementNodeManager.web\";\nimport { RNSharedElementStyle } from \"./RNSharedElementStyle.web\";\nimport { RNSharedElementTransitionItem } from \"./RNSharedElementTransitionItem.web\";\nimport { RNSharedElementView } from \"./RNSharedElementView.web\";\nimport { Rect } from \"./Rect.web\";\nimport { RNSharedElementAnimation, RNSharedElementResize, RNSharedElementAlign } from \"./types\";\nexport var RNSharedElementTransition = function () {\n  function RNSharedElementTransition() {\n    _classCallCheck(this, RNSharedElementTransition);\n\n    this.items = [new RNSharedElementTransitionItem(RNSharedElementNodeManager.getInstance(), \"start\"), new RNSharedElementTransitionItem(RNSharedElementNodeManager.getInstance(), \"end\")];\n    this.animation = RNSharedElementAnimation.Move;\n    this.resize = RNSharedElementResize.Auto;\n    this.align = RNSharedElementAlign.Auto;\n    this.nodePosition = 0;\n    this.element = null;\n    this.layout = Rect.empty;\n    this.views = [null, null];\n  }\n\n  _createClass(RNSharedElementTransition, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.element = null;\n      this.items.forEach(function (item) {\n        return item.node = null;\n      });\n    }\n  }, {\n    key: \"setNode\",\n    value: function setNode(end, node, ancestor) {\n      this.items[end ? 1 : 0].node = node && ancestor ? RNSharedElementNodeManager.getInstance().acquire(node.nodeHandle, node.isParent, ancestor.nodeHandle) : null;\n    }\n  }, {\n    key: \"didSetProps\",\n    value: function didSetProps() {\n      this.requestStylesAndContent();\n      this.updateLayout();\n      this.updateNodeVisibility();\n    }\n  }, {\n    key: \"requestStylesAndContent\",\n    value: function requestStylesAndContent() {\n      var _this = this;\n\n      this.items.forEach(function (item) {\n        if (item.needsStyle) {\n          item.needsStyle = false;\n          item.node.requestStyle().then(function (style) {\n            item.style = style;\n\n            _this.updateLayout();\n          });\n        }\n\n        if (item.needsContent) {\n          item.needsContent = false;\n          item.node.requestContent().then(function (content) {\n            item.content = content;\n\n            _this.updateLayout();\n          });\n        }\n      });\n    }\n  }, {\n    key: \"updateNodeVisibility\",\n    value: function updateNodeVisibility() {\n      var items = this.items,\n          animation = this.animation;\n      items.forEach(function (item) {\n        var hidden = !!(item.style && item.content);\n        if (hidden && animation === RNSharedElementAnimation.FadeIn && item.name === \"start\") hidden = false;\n        if (hidden && animation === RNSharedElementAnimation.FadeOut && item.name === \"end\") hidden = false;\n        item.hidden = hidden;\n      });\n    }\n  }, {\n    key: \"updateLayout\",\n    value: function updateLayout() {\n      var element = this.element,\n          items = this.items,\n          nodePosition = this.nodePosition,\n          animation = this.animation;\n      if (!element) return;\n      this.layout = new Rect(element.getBoundingClientRect());\n      var startStyle = items[0].style;\n      var endStyle = items[1].style;\n      if (!startStyle && !endStyle) return;\n      var startContent = items[0].content;\n      var endContent = items[1].content;\n      var startLayout = startStyle ? startStyle.layout : Rect.empty;\n      var startContentLayout = startStyle ? RNSharedElementContent.getLayout(startLayout, startContent, startStyle.style.backgroundSize) : startLayout;\n      var endLayout = endStyle ? endStyle.layout : Rect.empty;\n      var endContentLayout = endStyle ? RNSharedElementContent.getLayout(endLayout, endContent || startContent, endStyle.style.backgroundSize) : endLayout;\n      var interpolatedLayout = startLayout;\n      var interpolatedStyle = startStyle;\n      var interpolatedContentLayout = startContentLayout;\n\n      if (startStyle && endStyle) {\n        interpolatedLayout = RNSharedElementStyle.getInterpolatedLayout(startLayout, endLayout, nodePosition);\n        interpolatedStyle = RNSharedElementStyle.getInterpolatedStyle(startStyle, endStyle, nodePosition);\n        interpolatedContentLayout = RNSharedElementStyle.getInterpolatedLayout(startContentLayout, endContentLayout, nodePosition);\n      } else if (startStyle) {\n        interpolatedLayout = startLayout;\n        interpolatedStyle = startStyle;\n        interpolatedContentLayout = startContentLayout;\n      } else {\n        interpolatedLayout = endLayout;\n        interpolatedStyle = endStyle;\n        interpolatedContentLayout = endContentLayout;\n      }\n\n      if (animation === RNSharedElementAnimation.Move || animation === RNSharedElementAnimation.Fade || animation === RNSharedElementAnimation.FadeOut) {\n        var startOpacity = animation === RNSharedElementAnimation.Move ? interpolatedStyle.opacity : (startStyle ? startStyle.opacity : 1) * (1 - nodePosition);\n        this.updateView(0, interpolatedLayout, interpolatedStyle, interpolatedContentLayout, startLayout, startContent, startOpacity);\n      }\n\n      if (animation === RNSharedElementAnimation.Fade || animation === RNSharedElementAnimation.FadeIn) {\n        var endOpacity = (endStyle ? endStyle.opacity : 1) * nodePosition;\n        this.updateView(1, interpolatedLayout, interpolatedStyle, interpolatedContentLayout, endLayout, endContent, endOpacity);\n      }\n    }\n  }, {\n    key: \"updateView\",\n    value: function updateView(index, interpolatedLayout, interpolatedStyle, interpolatedContentLayout, originalLayout, content, opacity) {\n      var view = this.views[index];\n\n      if (!view) {\n        view = new RNSharedElementView();\n        this.element.appendChild(view.element);\n        this.views[index] = view;\n      }\n\n      view.resize = this.resize;\n      view.align = this.align;\n      view.parentLayout = this.layout;\n      view.originalLayout = originalLayout;\n      view.layout = interpolatedLayout;\n      view.contentLayout = interpolatedContentLayout;\n      view.style = interpolatedStyle;\n\n      if (!view.contentElement) {\n        if (!content || !content.element) return;\n        view.contentElement = content.element.cloneNode(true);\n      }\n\n      view.contentElement.style.opacity = String(opacity);\n      view.updateLayout();\n    }\n  }]);\n\n  return RNSharedElementTransition;\n}();","map":{"version":3,"sources":["../../src/web/RNSharedElementTransition.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { RNSharedElementContent } from \"./RNSharedElementContent.web\";\nimport { RNSharedElementNodeManager } from \"./RNSharedElementNodeManager.web\";\nimport { RNSharedElementStyle } from \"./RNSharedElementStyle.web\";\nimport { RNSharedElementTransitionItem } from \"./RNSharedElementTransitionItem.web\";\n// import { RNSharedElementNode } from \"./RNSharedElementNode\";\nimport { RNSharedElementView } from \"./RNSharedElementView.web\";\nimport { Rect } from \"./Rect.web\";\nimport {\n  RNSharedElementNodeConfig,\n  RNSharedElementAnimation,\n  RNSharedElementResize,\n  RNSharedElementAlign,\n  IHTMLElement\n} from \"./types\";\n\nexport class RNSharedElementTransition {\n  private items = [\n    new RNSharedElementTransitionItem(\n      RNSharedElementNodeManager.getInstance(),\n      \"start\"\n    ),\n    new RNSharedElementTransitionItem(\n      RNSharedElementNodeManager.getInstance(),\n      \"end\"\n    )\n  ];\n  public animation: RNSharedElementAnimation = RNSharedElementAnimation.Move;\n  public resize: RNSharedElementResize = RNSharedElementResize.Auto;\n  public align: RNSharedElementAlign = RNSharedElementAlign.Auto;\n  public nodePosition: number = 0;\n  public element: IHTMLElement | null = null;\n  private layout: Rect = Rect.empty;\n  private views: (RNSharedElementView | null)[] = [null, null];\n\n  public destroy() {\n    this.element = null;\n    this.items.forEach(item => (item.node = null));\n  }\n\n  public setNode(\n    end: boolean,\n    node: RNSharedElementNodeConfig | null,\n    ancestor: RNSharedElementNodeConfig | null\n  ) {\n    this.items[end ? 1 : 0].node =\n      node && ancestor\n        ? RNSharedElementNodeManager.getInstance().acquire(\n            node.nodeHandle,\n            node.isParent,\n            ancestor.nodeHandle\n          )\n        : null;\n  }\n\n  public didSetProps() {\n    this.requestStylesAndContent();\n    this.updateLayout();\n    this.updateNodeVisibility();\n  }\n\n  private requestStylesAndContent() {\n    this.items.forEach(item => {\n      if (item.needsStyle) {\n        item.needsStyle = false;\n        item.node!.requestStyle().then(style => {\n          item.style = style;\n          this.updateLayout();\n        });\n      }\n      if (item.needsContent) {\n        item.needsContent = false;\n        item.node!.requestContent().then(content => {\n          item.content = content;\n          this.updateLayout();\n        });\n      }\n    });\n  }\n\n  private updateNodeVisibility() {\n    const { items, animation } = this;\n    items.forEach(item => {\n      let hidden = !!(item.style && item.content);\n      if (\n        hidden &&\n        animation === RNSharedElementAnimation.FadeIn &&\n        item.name === \"start\"\n      )\n        hidden = false;\n      if (\n        hidden &&\n        animation === RNSharedElementAnimation.FadeOut &&\n        item.name === \"end\"\n      )\n        hidden = false;\n      item.hidden = hidden;\n    });\n  }\n\n  private updateLayout() {\n    const {\n      element,\n      items,\n      nodePosition,\n      animation /*, animation, resize, align*/\n    } = this;\n    if (!element) return;\n\n    // Get parent layout\n    this.layout = new Rect(element.getBoundingClientRect());\n\n    // Get styles & content\n    const startStyle = items[0].style;\n    const endStyle = items[1].style;\n    if (!startStyle && !endStyle) return;\n    const startContent = items[0].content;\n    const endContent = items[1].content;\n\n    // Get start layout\n    const startLayout = startStyle ? startStyle.layout : Rect.empty;\n    const startContentLayout = startStyle\n      ? RNSharedElementContent.getLayout(\n          startLayout,\n          startContent,\n          startStyle.style.backgroundSize\n        )\n      : startLayout;\n    //CGRect startVisibleLayout = startStyle ? [self normalizeLayout:[startItem visibleLayoutForAncestor:startAncestor] ancestor:startAncestor] : CGRectZero;\n    //UIEdgeInsets startClipInsets = [self getClipInsets:startLayout visibleLayout:startVisibleLayout];\n\n    // Get end layout\n    const endLayout = endStyle ? endStyle.layout : Rect.empty;\n    const endContentLayout = endStyle\n      ? RNSharedElementContent.getLayout(\n          endLayout,\n          endContent || startContent,\n          endStyle.style.backgroundSize\n        )\n      : endLayout;\n\n    // Get interpolated layout\n    let interpolatedLayout: Rect = startLayout;\n    let interpolatedStyle: RNSharedElementStyle = startStyle!;\n    let interpolatedContentLayout: Rect = startContentLayout;\n    // let interpolatedClipInsets: Rect = Rect.empty;\n    if (startStyle && endStyle) {\n      interpolatedLayout = RNSharedElementStyle.getInterpolatedLayout(\n        startLayout,\n        endLayout,\n        nodePosition\n      );\n      // interpolatedClipInsets = getInterpolatedClipInsets(parentLayout, startClipInsets, startClippedLayout, endClipInsets, endClippedLayout, mNodePosition);\n      interpolatedStyle = RNSharedElementStyle.getInterpolatedStyle(\n        startStyle,\n        endStyle,\n        nodePosition\n      );\n      interpolatedContentLayout = RNSharedElementStyle.getInterpolatedLayout(\n        startContentLayout,\n        endContentLayout,\n        nodePosition\n      );\n    } else if (startStyle) {\n      interpolatedLayout = startLayout;\n      interpolatedStyle = startStyle;\n      interpolatedContentLayout = startContentLayout;\n      // interpolatedClipInsets = startClipInsets;\n    } else {\n      interpolatedLayout = endLayout;\n      interpolatedStyle = endStyle!;\n      interpolatedContentLayout = endContentLayout;\n      // interpolatedClipInsets = endClipInsets;\n    }\n\n    if (\n      animation === RNSharedElementAnimation.Move ||\n      animation === RNSharedElementAnimation.Fade ||\n      animation === RNSharedElementAnimation.FadeOut\n    ) {\n      const startOpacity =\n        animation === RNSharedElementAnimation.Move\n          ? interpolatedStyle.opacity\n          : (startStyle ? startStyle.opacity : 1) * (1 - nodePosition);\n      this.updateView(\n        0,\n        interpolatedLayout,\n        interpolatedStyle,\n        interpolatedContentLayout,\n        startLayout,\n        startContent,\n        startOpacity\n      );\n    }\n    if (\n      animation === RNSharedElementAnimation.Fade ||\n      animation === RNSharedElementAnimation.FadeIn\n    ) {\n      const endOpacity = (endStyle ? endStyle.opacity : 1) * nodePosition;\n      this.updateView(\n        1,\n        interpolatedLayout,\n        interpolatedStyle,\n        interpolatedContentLayout,\n        endLayout,\n        endContent,\n        endOpacity\n      );\n    }\n  }\n\n  private updateView(\n    index: number,\n    interpolatedLayout: Rect,\n    interpolatedStyle: RNSharedElementStyle,\n    interpolatedContentLayout: Rect,\n    originalLayout: Rect,\n    content: RNSharedElementContent | null,\n    opacity: number\n  ) {\n    // Find / create view\n    let view = this.views[index];\n    if (!view) {\n      view = new RNSharedElementView();\n      this.element!.appendChild(view.element);\n      this.views[index] = view;\n    }\n\n    // Set resize & align\n    view.resize = this.resize;\n    view.align = this.align;\n\n    // Set layouts\n    view.parentLayout = this.layout;\n    view.originalLayout = originalLayout;\n    view.layout = interpolatedLayout;\n    view.contentLayout = interpolatedContentLayout;\n\n    // Set style\n    view.style = interpolatedStyle;\n\n    // If the content-element does not yet exist, then clone it and add it to the view\n    if (!view.contentElement) {\n      if (!content || !content.element) return;\n      // @ts-ignore\n      view.contentElement = content.element.cloneNode(true);\n    }\n    view.contentElement!.style.opacity = String(opacity);\n\n    // Update layout\n    view.updateLayout();\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}