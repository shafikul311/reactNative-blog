{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { RNSharedElementAlign, RNSharedElementResize } from \"./types\";\nimport { Rect } from \"./Rect\";\n\nfunction initElement(element) {\n  var style = element.style;\n  style.position = 'absolute';\n  style.left = '0px';\n  style.top = '0px';\n  style.pointerEvents = 'none';\n  style.transformOrigin = '0% 0%';\n  style.transformStyle = 'preserve-3d';\n  style.backfaceVisibility = 'hidden';\n  style.backgroundSize = '100% 100%';\n  style.boxSizing = 'border-box';\n  style.overflow = 'hidden';\n  return element;\n}\n\nfunction createTransform() {\n  var translateX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var translateY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var scaleX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var scaleY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  return \"matrix3d(\\n    \" + scaleX + \", 0, 0, 0,\\n    0, \" + scaleY + \", 0, 0,\\n    0, 0, 1, 0,\\n    \" + translateX + \", \" + translateY + \", 0, 1\\n)\";\n}\n\nexport var RNSharedElementView = function () {\n  function RNSharedElementView() {\n    _classCallCheck(this, RNSharedElementView);\n\n    this.parentLayout = Rect.empty;\n    this.element = initElement(document.createElement('div'));\n    this.layout = Rect.empty;\n    this.style = null;\n    this.originalLayout = Rect.empty;\n    this._contentElement = null;\n    this.contentLayout = Rect.empty;\n    this.resize = RNSharedElementResize.Auto;\n    this.align = RNSharedElementAlign.Auto;\n  }\n\n  _createClass(RNSharedElementView, [{\n    key: \"updateLayout\",\n    value: function updateLayout() {\n      var layout = this.layout,\n          contentLayout = this.contentLayout,\n          resize = this.resize;\n      if (layout.equals(Rect.empty)) return;\n\n      if (resize === RNSharedElementResize.Stretch || resize === RNSharedElementResize.Auto && contentLayout.equals(layout)) {\n        this.updateLayoutForScale();\n      } else {\n        this.updateLayoutForResize();\n      }\n\n      this.updateStyle();\n    }\n  }, {\n    key: \"updateLayoutForScale\",\n    value: function updateLayoutForScale() {\n      var layout = this.layout,\n          originalLayout = this.originalLayout,\n          parentLayout = this.parentLayout,\n          element = this.element;\n      var width = originalLayout.width,\n          height = originalLayout.height;\n      var x = layout.x,\n          y = layout.y,\n          scaledWidth = layout.width,\n          scaledHeight = layout.height;\n      var widthPx = width + 'px';\n      var heightPx = height + 'px';\n      var style = element.style;\n      if (style.width !== widthPx) style.width = widthPx;\n      if (style.height !== heightPx) style.height = heightPx;\n      var translateX = x - parentLayout.x;\n      var translateY = y - parentLayout.y;\n      var scaleX = scaledWidth / width;\n      var scaleY = scaledHeight / height;\n      style.transform = createTransform(translateX, translateY, scaleX, scaleY);\n      var _ref = this._contentElement,\n          contentStyle = _ref.style;\n      if (contentStyle.width !== widthPx) contentStyle.width = widthPx;\n      if (contentStyle.height !== heightPx) contentStyle.height = heightPx;\n      contentStyle.transform = createTransform();\n    }\n  }, {\n    key: \"updateLayoutForResize\",\n    value: function updateLayoutForResize() {\n      var layout = this.layout,\n          parentLayout = this.parentLayout,\n          element = this.element,\n          contentLayout = this.contentLayout,\n          originalLayout = this.originalLayout,\n          align = this.align,\n          resize = this.resize;\n      var x = layout.x,\n          y = layout.y,\n          width = layout.width,\n          height = layout.height;\n      var widthPx = width + 'px';\n      var heightPx = height + 'px';\n      var style = element.style;\n      if (style.width !== widthPx) style.width = widthPx;\n      if (style.height !== heightPx) style.height = heightPx;\n      var translateX = x - parentLayout.x;\n      var translateY = y - parentLayout.y;\n      style.transform = createTransform(translateX, translateY);\n      if (!this._contentElement) return;\n      var contentX = contentLayout.x,\n          contentY = contentLayout.y,\n          contentWidth = contentLayout.width,\n          contentHeight = contentLayout.height;\n      var overflow = 'hidden';\n\n      switch (resize) {\n        case RNSharedElementResize.Auto:\n          break;\n\n        case RNSharedElementResize.Stretch:\n          contentWidth = width;\n          contentHeight = height;\n          break;\n\n        case RNSharedElementResize.Clip:\n          contentWidth = originalLayout.width;\n          contentHeight = originalLayout.height;\n          break;\n\n        case RNSharedElementResize.None:\n          contentWidth = originalLayout.width;\n          contentHeight = originalLayout.height;\n          overflow = 'visible';\n          break;\n      }\n\n      switch (align) {\n        case RNSharedElementAlign.LeftTop:\n          contentX = 0;\n          contentY = 0;\n          break;\n\n        case RNSharedElementAlign.LeftCenter:\n          contentX = 0;\n          contentY = (height - contentHeight) / 2;\n          break;\n\n        case RNSharedElementAlign.LeftBottom:\n          contentX = 0;\n          contentY = height - contentHeight;\n          break;\n\n        case RNSharedElementAlign.RightTop:\n          contentX = width - contentWidth;\n          contentY = 0;\n          break;\n\n        case RNSharedElementAlign.RightCenter:\n          contentX = width - contentWidth;\n          contentY = (height - contentHeight) / 2;\n          break;\n\n        case RNSharedElementAlign.RightBottom:\n          contentX = width - contentWidth;\n          contentY = height - contentHeight;\n          break;\n\n        case RNSharedElementAlign.CenterTop:\n          contentX = (width - contentWidth) / 2;\n          contentY = 0;\n          break;\n\n        case RNSharedElementAlign.Auto:\n        case RNSharedElementAlign.CenterCenter:\n          contentX = (width - contentWidth) / 2;\n          contentY = (height - contentHeight) / 2;\n          break;\n\n        case RNSharedElementAlign.CenterBottom:\n          contentX = (width - contentWidth) / 2;\n          contentY = height - contentHeight;\n          break;\n      }\n\n      var contentWidthPx = contentWidth + 'px';\n      var contentHeightPx = contentHeight + 'px';\n      var contentStyle = this._contentElement.style;\n      if (contentStyle.width !== widthPx) contentStyle.width = contentWidthPx;\n      if (contentStyle.height !== heightPx) contentStyle.height = contentHeightPx;\n      contentStyle.transform = createTransform(contentX, contentY);\n\n      if (element.style.overflow !== overflow) {\n        element.style.overflow = overflow;\n      }\n    }\n  }, {\n    key: \"updateStyle\",\n    value: function updateStyle() {}\n  }, {\n    key: \"contentElement\",\n    get: function get() {\n      return this._contentElement;\n    },\n    set: function set(value) {\n      if (this._contentElement === value) return;\n\n      if (this._contentElement) {\n        this.element.removeChild(this._contentElement);\n      }\n\n      this._contentElement = value ? initElement(value) : null;\n\n      if (this._contentElement) {\n        this.element.appendChild(this._contentElement);\n      }\n    }\n  }]);\n\n  return RNSharedElementView;\n}();","map":{"version":3,"sources":["RNSharedElementView.ts"],"names":["style","element","translateX","translateY","scaleX","scaleY","RNSharedElementView","Rect","initElement","document","RNSharedElementResize","RNSharedElementAlign","value","layout","contentLayout","resize","originalLayout","parentLayout","width","height","x","y","scaledWidth","scaledHeight","widthPx","heightPx","createTransform","contentStyle","align","contentX","contentY","contentWidth","contentHeight","overflow","contentWidthPx","contentHeightPx"],"mappings":"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","sourcesContent":["import {\n  IHTMLElement,\n  RNSharedElementAlign,\n  RNSharedElementResize,\n} from './types';\nimport { Rect } from './Rect';\nimport { RNSharedElementStyle } from './RNSharedElementStyle';\n\nfunction initElement(element: IHTMLElement): IHTMLElement {\n  const { style } = element;\n\n  // Reset default layout behavior\n  style.position = 'absolute';\n  style.left = '0px';\n  style.top = '0px';\n  style.pointerEvents = 'none';\n  style.transformOrigin = '0% 0%';\n  style.transformStyle = 'preserve-3d';\n  style.backfaceVisibility = 'hidden';\n  style.backgroundSize = '100% 100%';\n  style.boxSizing = 'border-box';\n  style.overflow = 'hidden';\n\n  // Clear styles\n  // style.backgroundColor = null;\n\n  return element;\n}\n\nfunction createTransform(\n  translateX: number = 0,\n  translateY: number = 0,\n  scaleX: number = 1,\n  scaleY: number = 1\n) {\n  return `matrix3d(\n    ${scaleX}, 0, 0, 0,\n    0, ${scaleY}, 0, 0,\n    0, 0, 1, 0,\n    ${translateX}, ${translateY}, 0, 1\n)`;\n}\n\nexport class RNSharedElementView {\n  public parentLayout: Rect = Rect.empty;\n  // @ts-ignore\n  public readonly element = initElement(document.createElement('div'));\n  public layout: Rect = Rect.empty;\n  public style: RNSharedElementStyle | null = null;\n  public originalLayout: Rect = Rect.empty;\n  public _contentElement: IHTMLElement | null = null;\n  public contentLayout: Rect = Rect.empty;\n  public resize: RNSharedElementResize = RNSharedElementResize.Auto;\n  public align: RNSharedElementAlign = RNSharedElementAlign.Auto;\n\n  get contentElement(): IHTMLElement | null {\n    return this._contentElement;\n  }\n  set contentElement(value: IHTMLElement | null) {\n    if (this._contentElement === value) return;\n    if (this._contentElement) {\n      this.element.removeChild(this._contentElement);\n    }\n    this._contentElement = value ? initElement(value) : null;\n    if (this._contentElement) {\n      this.element.appendChild(this._contentElement);\n    }\n  }\n\n  public updateLayout() {\n    const { layout, contentLayout, resize } = this;\n    if (layout.equals(Rect.empty)) return;\n\n    // Run either the stretch (scale) or resize algorithm\n    if (\n      resize === RNSharedElementResize.Stretch ||\n      (resize === RNSharedElementResize.Auto && contentLayout.equals(layout))\n    ) {\n      this.updateLayoutForScale();\n    } else {\n      this.updateLayoutForResize();\n    }\n\n    // Update style\n    this.updateStyle();\n  }\n\n  /**\n   * Updates the layout by only changing the scale of the\n   * element. This technique achieves a very high performance\n   * as it can be handled completely by the GPU, requiring\n   * no layout passes in the browser. It is however also more\n   * limited and can't be used for all effects.\n   */\n  private updateLayoutForScale() {\n    const { layout, originalLayout, parentLayout, element } = this;\n\n    // Update layout\n    const { width, height } = originalLayout;\n    const { x, y, width: scaledWidth, height: scaledHeight } = layout;\n\n    // Update size\n    const widthPx = width + 'px';\n    const heightPx = height + 'px';\n    const { style } = element;\n    if (style.width !== widthPx) style.width = widthPx;\n    if (style.height !== heightPx) style.height = heightPx;\n\n    // Calculate translation\n    const translateX = x - parentLayout.x;\n    const translateY = y - parentLayout.y;\n\n    // Calculate scale\n    const scaleX = scaledWidth / width;\n    const scaleY = scaledHeight / height;\n\n    // Update transform matrix\n    style.transform = createTransform(translateX, translateY, scaleX, scaleY);\n\n    // Update content element\n    const { style: contentStyle } = this._contentElement!;\n    if (contentStyle.width !== widthPx) contentStyle.width = widthPx;\n    if (contentStyle.height !== heightPx) contentStyle.height = heightPx;\n    contentStyle.transform = createTransform();\n  }\n\n  /**\n   * Updates the layout by updating the size of the\n   * element and its content element. This algorihm\n   * can achieve any possible layout, as well as\n   * clipping of the content.\n   */\n  private updateLayoutForResize() {\n    const {\n      layout,\n      parentLayout,\n      element,\n      contentLayout,\n      originalLayout,\n      align,\n      resize,\n    } = this;\n    const { x, y, width, height } = layout;\n\n    // Update size\n    const widthPx = width + 'px';\n    const heightPx = height + 'px';\n    const { style } = element;\n    if (style.width !== widthPx) style.width = widthPx;\n    if (style.height !== heightPx) style.height = heightPx;\n\n    // Update transform\n    const translateX = x - parentLayout.x;\n    const translateY = y - parentLayout.y;\n    style.transform = createTransform(translateX, translateY);\n\n    // Content\n    if (!this._contentElement) return;\n    let {\n      x: contentX,\n      y: contentY,\n      width: contentWidth,\n      height: contentHeight,\n    } = contentLayout;\n\n    // Get content size\n    let overflow = 'hidden';\n    switch (resize) {\n      case RNSharedElementResize.Auto:\n        // keep original size\n        break;\n      case RNSharedElementResize.Stretch:\n        contentWidth = width;\n        contentHeight = height;\n        break;\n      case RNSharedElementResize.Clip:\n        contentWidth = originalLayout.width;\n        contentHeight = originalLayout.height;\n        break;\n      case RNSharedElementResize.None:\n        contentWidth = originalLayout.width;\n        contentHeight = originalLayout.height;\n        overflow = 'visible';\n        break;\n    }\n\n    // Align\n    switch (align) {\n      case RNSharedElementAlign.LeftTop:\n        contentX = 0;\n        contentY = 0;\n        break;\n      case RNSharedElementAlign.LeftCenter:\n        contentX = 0;\n        contentY = (height - contentHeight) / 2;\n        break;\n      case RNSharedElementAlign.LeftBottom:\n        contentX = 0;\n        contentY = height - contentHeight;\n        break;\n      case RNSharedElementAlign.RightTop:\n        contentX = width - contentWidth;\n        contentY = 0;\n        break;\n      case RNSharedElementAlign.RightCenter:\n        contentX = width - contentWidth;\n        contentY = (height - contentHeight) / 2;\n        break;\n      case RNSharedElementAlign.RightBottom:\n        contentX = width - contentWidth;\n        contentY = height - contentHeight;\n        break;\n      case RNSharedElementAlign.CenterTop:\n        contentX = (width - contentWidth) / 2;\n        contentY = 0;\n        break;\n      case RNSharedElementAlign.Auto:\n      case RNSharedElementAlign.CenterCenter:\n        contentX = (width - contentWidth) / 2;\n        contentY = (height - contentHeight) / 2;\n        break;\n      case RNSharedElementAlign.CenterBottom:\n        contentX = (width - contentWidth) / 2;\n        contentY = height - contentHeight;\n        break;\n    }\n\n    // Update content size\n    const contentWidthPx = contentWidth + 'px';\n    const contentHeightPx = contentHeight + 'px';\n    const { style: contentStyle } = this._contentElement;\n    if (contentStyle.width !== widthPx) contentStyle.width = contentWidthPx;\n    if (contentStyle.height !== heightPx) contentStyle.height = contentHeightPx;\n\n    // Update content transform\n    contentStyle.transform = createTransform(contentX, contentY);\n\n    // Update overflow\n    if (element.style.overflow !== overflow) {\n      element.style.overflow = overflow;\n    }\n  }\n\n  private updateStyle() {\n    //const { style, element } = this;\n    //if (!style) return;\n    // element.style.backgroundColor = formatColor(style.backgroundColor);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}