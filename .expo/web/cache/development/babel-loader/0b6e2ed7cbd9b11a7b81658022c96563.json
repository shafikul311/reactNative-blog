{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { Rect } from \"./Rect\";\nexport var RNSharedElementContent = function () {\n  function RNSharedElementContent(element, size) {\n    _classCallCheck(this, RNSharedElementContent);\n\n    this.element = element;\n    this.size = size;\n  }\n\n  _createClass(RNSharedElementContent, null, [{\n    key: \"getSize\",\n    value: function getSize(element) {\n      return new Promise(function (resolve) {\n        if (element.style.backgroundImage) {\n          var img = document.createElement('img');\n\n          img.onload = function () {\n            resolve(new Rect({\n              x: 0,\n              y: 0,\n              width: img.width,\n              height: img.height\n            }));\n          };\n\n          img.onerror = function () {\n            return resolve(null);\n          };\n\n          var url = element.style.backgroundImage;\n          img.src = url.substring(5, url.length - 2);\n          return;\n        }\n\n        resolve(new Rect({\n          x: 0,\n          y: 0,\n          width: element.clientWidth || 0,\n          height: element.clientHeight || 0\n        }));\n      });\n    }\n  }, {\n    key: \"getLayout\",\n    value: function getLayout(layout, content, resizeMode, reverse) {\n      if (!content) return layout;\n      if (!content.element.style.backgroundImage) return layout;\n      var width = layout.width,\n          height = layout.height;\n      var contentAspectRatio = content.size.width / content.size.height;\n      var lo = width / height < contentAspectRatio;\n      var aspectRatioCriteria = reverse ? !lo : lo;\n\n      switch (resizeMode) {\n        case 'stretch':\n        case '100% 100%':\n          break;\n\n        case 'cover':\n          if (aspectRatioCriteria) {\n            width = height * contentAspectRatio;\n          } else {\n            height = width / contentAspectRatio;\n          }\n\n          break;\n\n        case 'center':\n          width = content.size.width;\n          height = content.size.height;\n          break;\n\n        case 'contain':\n        default:\n          if (aspectRatioCriteria) {\n            height = width / contentAspectRatio;\n          } else {\n            width = height * contentAspectRatio;\n          }\n\n          break;\n      }\n\n      return new Rect({\n        x: layout.x + (layout.width - width) / 2,\n        y: layout.y + (layout.height - height) / 2,\n        width: width,\n        height: height\n      });\n    }\n  }]);\n\n  return RNSharedElementContent;\n}();","map":{"version":3,"sources":["RNSharedElementContent.ts"],"names":["RNSharedElementContent","element","img","document","resolve","x","y","width","height","url","content","layout","contentAspectRatio","lo","aspectRatioCriteria","reverse"],"mappings":"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","sourcesContent":["import { Rect } from './Rect';\nimport { IHTMLElement } from './types';\n\nexport class RNSharedElementContent {\n  public readonly element: IHTMLElement;\n  public readonly size: Rect;\n\n  constructor(element: IHTMLElement, size: Rect) {\n    this.element = element;\n    this.size = size;\n  }\n\n  static getSize(element: IHTMLElement): Promise<Rect | null> {\n    return new Promise(resolve => {\n      if (element.style.backgroundImage) {\n        // @ts-ignore\n        const img = document.createElement('img');\n        img.onload = () => {\n          resolve(\n            new Rect({\n              x: 0,\n              y: 0,\n              width: img.width,\n              height: img.height,\n            })\n          );\n        };\n        img.onerror = () => resolve(null);\n        const url = element.style.backgroundImage;\n        img.src = url.substring(5, url.length - 2);\n        return;\n      }\n      resolve(\n        new Rect({\n          x: 0,\n          y: 0,\n          width: element.clientWidth || 0,\n          height: element.clientHeight || 0,\n        })\n      );\n    });\n  }\n\n  static getLayout(\n    layout: Rect,\n    content: RNSharedElementContent | null,\n    resizeMode: string,\n    reverse?: boolean\n  ) {\n    if (!content) return layout;\n    if (!content.element.style.backgroundImage) return layout;\n    let { width, height } = layout;\n    const contentAspectRatio = content.size.width / content.size.height;\n    const lo = width / height < contentAspectRatio;\n    const aspectRatioCriteria = reverse ? !lo : lo;\n    switch (resizeMode) {\n      case 'stretch':\n      case '100% 100%':\n        // nop\n        break;\n      case 'cover':\n        if (aspectRatioCriteria) {\n          width = height * contentAspectRatio;\n        } else {\n          height = width / contentAspectRatio;\n        }\n        break;\n      case 'center':\n        width = content.size.width;\n        height = content.size.height;\n        break;\n      case 'contain':\n      default:\n        if (aspectRatioCriteria) {\n          height = width / contentAspectRatio;\n        } else {\n          width = height * contentAspectRatio;\n        }\n        break;\n    }\n    return new Rect({\n      x: layout.x + (layout.width - width) / 2,\n      y: layout.y + (layout.height - height) / 2,\n      width,\n      height,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}