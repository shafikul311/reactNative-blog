{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/hein/repos/react/react-native-shared-element/src/RNSharedElementTransitionView.web.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { RNSharedElementTransition } from \"./web\";\nexport var RNSharedElementTransitionView = function (_React$Component) {\n  _inherits(RNSharedElementTransitionView, _React$Component);\n\n  function RNSharedElementTransitionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RNSharedElementTransitionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RNSharedElementTransitionView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      transition: new RNSharedElementTransition()\n    };\n\n    _this.onSetRef = function (ref) {\n      if (!ref) return;\n      var element = ref ? findNodeHandle(ref) : null;\n      var transition = _this.state.transition;\n      transition.element = element;\n    };\n\n    return _this;\n  }\n\n  _createClass(RNSharedElementTransitionView, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.state.transition.destroy();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        ref: this.onSetRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        }\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var startNode = props.startNode,\n          endNode = props.endNode,\n          animation = props.animation,\n          resize = props.resize,\n          align = props.align,\n          nodePosition = props.nodePosition;\n      var transition = state.transition;\n      transition.setNode(false, startNode.node, startNode.ancestor);\n      transition.setNode(true, endNode.node, endNode.ancestor);\n      transition.nodePosition = nodePosition;\n      transition.animation = animation;\n      transition.resize = resize;\n      transition.align = align;\n      transition.didSetProps();\n      return null;\n    }\n  }]);\n\n  return RNSharedElementTransitionView;\n}(React.Component);","map":{"version":3,"sources":["RNSharedElementTransitionView.web.tsx"],"names":["RNSharedElementTransitionView","React","transition","startNode","endNode","animation","resize","align","nodePosition","props","state","element","ref","findNodeHandle"],"mappings":";;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAEA,SAAA,yBAAA;AA2BA,OAAA,IAAaA,6BAAb,GAAA,UAAA,gBAAA,EAAA;AAAA,EAAA,SAAA,CAAA,6BAAA,EAAA,gBAAA,CAAA;;AAAA,WAAA,6BAAA,GAAA;AAAA,QAAA,gBAAA;;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,6BAAA,CAAA;;AAAA,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAA,IAAA,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAA,MAAA,IAAA,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA;AAAA;;AAAA,IAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,CAAA,gBAAA,GAAA,eAAA,CAAA,6BAAA,CAAA,EAAA,IAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,CAAA,IAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AAAA,IAAA,KAAA,CAAA,KAAA,GAIU;AACNE,MAAAA,UAAU,EAAE,IALhB,yBAKgB;AADN,KAJV;;AAAA,IAAA,KAAA,CAAA,QAAA,GAoCqB,UAAA,GAAA,EAAc;AAC/B,UAAI,CAAJ,GAAA,EAAU;AACV,UAAMS,OAAY,GAAGC,GAAG,GAAGC,cAAc,CAAjB,GAAiB,CAAjB,GAAxB,IAAA;AAF+B,UAGvBX,UAHuB,GAGR,KAAA,CAHQ,KAGR,CAHQ,UAAA;AAI/BA,MAAAA,UAAU,CAAVA,OAAAA,GAAAA,OAAAA;AAxCJ,KAAA;;AAAA,WAAA,KAAA;AAAA;;AAAA,EAAA,YAAA,CAAA,6BAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,uBAAA;AAAA,IAAA,KAAA,EAAA,SAAA,qBAAA,GA4B0B;AACtB,aAAA,KAAA;AA7BJ;AAAA,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,sBAAA;AAAA,IAAA,KAAA,EAAA,SAAA,oBAAA,GAgCyB;AACrB,WAAA,KAAA,CAAA,UAAA,CAAA,OAAA;AAjCJ;AAAA,GAAA,EAAA;AAAA,IAAA,GAAA,EAAA,QAAA;AAAA,IAAA,KAAA,EAAA,SAAA,MAAA,GA2CW;AAEP,aAAO,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,QAAA,GAAG,EAAE,KAAX,QAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAP;AAAO;AAAA,OAAA,CAAP;AA7CJ;AAAA,GAAA,CAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,0BAAA;AAAA,IAAA,KAAA,EAAA,SAAA,wBAAA,CAAA,KAAA,EAAA,KAAA,EAQsE;AAAA,UAEhEC,SAFgE,GAQ9DM,KAR8D,CAAA,SAAA;AAAA,UAGhEL,OAHgE,GAQ9DK,KAR8D,CAAA,OAAA;AAAA,UAIhEJ,SAJgE,GAQ9DI,KAR8D,CAAA,SAAA;AAAA,UAKhEH,MALgE,GAQ9DG,KAR8D,CAAA,MAAA;AAAA,UAMhEF,KANgE,GAQ9DE,KAR8D,CAAA,KAAA;AAAA,UAOhED,YAPgE,GAQ9DC,KAR8D,CAAA,YAAA;AAAA,UAS1DP,UAT0D,GAS3CQ,KAT2C,CAAA,UAAA;AAUlER,MAAAA,UAAU,CAAVA,OAAAA,CAAAA,KAAAA,EAA0BC,SAAS,CAAnCD,IAAAA,EAA0CC,SAAS,CAAnDD,QAAAA;AACAA,MAAAA,UAAU,CAAVA,OAAAA,CAAAA,IAAAA,EAAyBE,OAAO,CAAhCF,IAAAA,EAAuCE,OAAO,CAA9CF,QAAAA;AACAA,MAAAA,UAAU,CAAVA,YAAAA,GAAAA,YAAAA;AACAA,MAAAA,UAAU,CAAVA,SAAAA,GAAAA,SAAAA;AACAA,MAAAA,UAAU,CAAVA,MAAAA,GAAAA,MAAAA;AACAA,MAAAA,UAAU,CAAVA,KAAAA,GAAAA,KAAAA;AACAA,MAAAA,UAAU,CAAVA,WAAAA;AACA,aAAA,IAAA;AAzBJ;AAAA,GAAA,CAAA,CAAA;;AAAA,SAAA,6BAAA;AAAA,CAAA,CAAmDD,KAAK,CAAxD,SAAA,CAAA","sourcesContent":["import * as React from 'react';\nimport { View, findNodeHandle } from 'react-native';\nimport {\n  RNSharedElementTransition,\n  RNSharedElementNodeConfig,\n  RNSharedElementAnimation,\n  RNSharedElementResize,\n  RNSharedElementAlign,\n} from './web';\n\ntype PropsType = {\n  startNode: {\n    node: RNSharedElementNodeConfig | null;\n    ancestor: RNSharedElementNodeConfig | null;\n  };\n  endNode: {\n    node: RNSharedElementNodeConfig | null;\n    ancestor: RNSharedElementNodeConfig | null;\n  };\n  nodePosition: number | any;\n  animation: RNSharedElementAnimation;\n  resize: RNSharedElementResize;\n  align: RNSharedElementAlign;\n  //onMeasure?: (event: SharedElementOnMeasureEvent) => void;\n};\ntype StateType = {\n  transition: RNSharedElementTransition;\n};\n\nexport class RNSharedElementTransitionView extends React.Component<\n  PropsType,\n  StateType\n> {\n  state = {\n    transition: new RNSharedElementTransition(),\n  };\n\n  static getDerivedStateFromProps(props: PropsType, state: StateType) {\n    const {\n      startNode,\n      endNode,\n      animation,\n      resize,\n      align,\n      nodePosition,\n    } = props;\n    const { transition } = state;\n    transition.setNode(false, startNode.node, startNode.ancestor);\n    transition.setNode(true, endNode.node, endNode.ancestor);\n    transition.nodePosition = nodePosition;\n    transition.animation = animation;\n    transition.resize = resize;\n    transition.align = align;\n    transition.didSetProps();\n    return null;\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  componentWillUnmount() {\n    this.state.transition.destroy();\n  }\n\n  private onSetRef = (ref: any) => {\n    if (!ref) return;\n    const element: any = ref ? findNodeHandle(ref) : null;\n    const { transition } = this.state;\n    transition.element = element;\n  };\n\n  render() {\n    // console.log(\"RNSharedElementTransitionView.render\");\n    return <View ref={this.onSetRef} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}