{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { data } from \"../../data\";\nvar initialState = {\n  allBlogs: data,\n  singleBLogData: [],\n  bookmarkBlogs: []\n};\nexport var blogReducers = function blogReducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOAD_SINGLE_BLOG_DATA':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          singleBLogData: state.allBlogs.find(function (blog) {\n            return blog.id === action;\n          })\n        });\n      }\n\n    case 'ADD_TO_BOOKMARK':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          bookmarkBlogs: [action].concat(_toConsumableArray(state.bookmarkBlogs))\n        });\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["E:/Scic Porjects/reactNative-blog/redux/Reducers/Reducers.js"],"names":["data","initialState","allBlogs","singleBLogData","bookmarkBlogs","blogReducers","state","action","type","find","blog","id"],"mappings":";;;;;;;AAAA,SAASA,IAAT;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAEF,IADO;AAEjBG,EAAAA,cAAc,EAAE,EAFC;AAGjBC,EAAAA,aAAa,EAAE;AAHE,CAArB;AAMA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC1D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,uBAAL;AAA8B;AAC1B,+CACOF,KADP;AAEIH,UAAAA,cAAc,EAAEG,KAAK,CAACJ,QAAN,CAAeO,IAAf,CAAoB,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAhB;AAAA,WAAxB;AAFpB;AAIH;;AACD,SAAK,iBAAL;AAAwB;AACpB,+CACOD,KADP;AAEIF,UAAAA,aAAa,GAAGG,MAAH,4BAAcD,KAAK,CAACF,aAApB;AAFjB;AAIH;;AACD;AACI,aAAOE,KAAP;AAdR;AAgBH,CAjBM","sourcesContent":["import { data } from \"../../data\"\r\nconst initialState = {\r\n    allBlogs: data,\r\n    singleBLogData: [],\r\n    bookmarkBlogs: []\r\n}\r\n\r\nexport const blogReducers = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'LOAD_SINGLE_BLOG_DATA': {\r\n            return {\r\n                ...state,\r\n                singleBLogData: state.allBlogs.find(blog => blog.id === action)\r\n            }\r\n        }\r\n        case 'ADD_TO_BOOKMARK': {\r\n            return {\r\n                ...state,\r\n                bookmarkBlogs: [action, ...state.bookmarkBlogs]\r\n            }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}