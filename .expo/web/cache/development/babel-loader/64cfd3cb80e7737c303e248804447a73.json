{"ast":null,"code":"var _jsxFileName = \"E:\\\\Scic Porjects\\\\reactNative-blog\\\\App.js\";\nimport React from 'react';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createSharedElementStackNavigator } from 'react-navigation-shared-element';\nimport MainScreen from \"./pages/MainScreen\";\nimport DetailScreen from \"./pages/DetailScreen\";\nimport { Provider } from 'react-redux';\nimport { store } from \"./redux/store\";\nvar Stack = createSharedElementStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar App = function App() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'MainScreen') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 22\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"MainScreen\",\n    component: MainScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })), \"//\"));\n};\n\nexport default App;\n\nfunction SettingsScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Settings screen\"), React.createElement(Button, {\n    title: \"Go to Details\",\n    onPress: function onPress() {\n      return navigation.navigate('Details');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["E:/Scic Porjects/reactNative-blog/App.js"],"names":["React","NavigationContainer","Ionicons","createBottomTabNavigator","createSharedElementStackNavigator","MainScreen","DetailScreen","Provider","store","Stack","Tab","App","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","SettingsScreen","navigation","flex","justifyContent","alignItems","navigate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,8BAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AAGA,SAASC,iCAAT,QAAkD,iCAAlD;AAGA,OAAOC,UAAP;AACA,OAAOC,YAAP;AAGA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT;AAEA,IAAMC,KAAK,GAAGL,iCAAiC,EAA/C;AACA,IAAMM,GAAG,GAAGP,wBAAwB,EAApC;;AAEA,IAAMQ,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,GAAD,CAAK,SAAL;AACE,IAAA,aAAa,EAAE;AAAA,UAAGI,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC7BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACxC,cAAIC,QAAJ;;AAEA,cAAIL,KAAK,CAACM,IAAN,KAAe,YAAnB,EAAiC;AAC/BD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,wBAAH,GAA8B,gCAAhD;AACD,WAFD,MAEO,IAAIF,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;AACpCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,cAAH,GAAoB,UAAtC;AACD;;AAGD,iBAAO,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAEG,QAAhB;AAA0B,YAAA,IAAI,EAAED,IAAhC;AAAsC,YAAA,KAAK,EAAED,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AAZ4B,OAAhB;AAAA,KADjB;AAeE,IAAA,aAAa,EAAE;AACbI,MAAAA,eAAe,EAAE,QADJ;AAEbC,MAAAA,iBAAiB,EAAE;AAFN,KAfjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAoBE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,YAAjB;AAA8B,IAAA,SAAS,EAAEf,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,EAqBE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,SAAS,EAAEgB,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CAFF,OADF,CADF;AAoDD,CArDD;;AAuDA,eAAeV,GAAf;;AAEA,SAASU,cAAT,QAAwC;AAAA,MAAdC,UAAc,SAAdA,UAAc;AACtC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMH,UAAU,CAACI,QAAX,CAAoB,SAApB,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AASD","sourcesContent":["import React from 'react';\r\nimport 'react-native-gesture-handler';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n\r\n// Package\r\nimport { createSharedElementStackNavigator } from 'react-navigation-shared-element';\r\n\r\n// Screens\r\nimport MainScreen from './pages/MainScreen'\r\nimport DetailScreen from './pages/DetailScreen'\r\n\r\n//redux\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\n\r\nconst Stack = createSharedElementStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <NavigationContainer>\r\n\r\n        <Tab.Navigator\r\n          screenOptions={({ route }) => ({\r\n            tabBarIcon: ({ focused, color, size }) => {\r\n              let iconName;\r\n\r\n              if (route.name === 'MainScreen') {\r\n                iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\r\n              } else if (route.name === 'Settings') {\r\n                iconName = focused ? 'ios-list-box' : 'ios-list';\r\n              }\r\n\r\n              // You can return any component that you like here!\r\n              return <Ionicons name={iconName} size={size} color={color} />;\r\n            },\r\n          })}\r\n          tabBarOptions={{\r\n            activeTintColor: 'tomato',\r\n            inactiveTintColor: 'gray',\r\n          }}\r\n        >\r\n          <Tab.Screen name=\"MainScreen\" component={MainScreen} />\r\n          <Tab.Screen name=\"Settings\" component={SettingsScreen} />\r\n        </Tab.Navigator>\r\n        //\r\n        {/* <Stack.Navigator\r\n          initialRouteName=\"List\"\r\n          screenOptions={{\r\n            headerShown: false\r\n          }}>\r\n          <Stack.Screen name=\"MainScreen\" component={MainScreen} />\r\n          <Stack.Screen\r\n            name=\"DetailScreen\"\r\n            component={DetailScreen}\r\n            options={() => ({\r\n              headerBackTitleVisible: false,\r\n              cardStyleInterpolator: ({ current: { progress } }) => {\r\n                return {\r\n                  cardStyle: {\r\n                    opacity: progress,\r\n                  },\r\n                };\r\n              },\r\n            })}\r\n          />\r\n        </Stack.Navigator> */}\r\n      </NavigationContainer>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nfunction SettingsScreen({ navigation }) {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Settings screen</Text>\r\n      <Button\r\n        title=\"Go to Details\"\r\n        onPress={() => navigation.navigate('Details')}\r\n      />\r\n    </View>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}